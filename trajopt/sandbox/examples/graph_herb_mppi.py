import sys
sys.path.append('/home/wagnew3/workspace/SSC/')
import os
from optparse import OptionParser
from trajopt.algos.mppi import MPPI
from trajopt.envs.utils import get_environment
from tqdm import tqdm
import time as timer
import numpy as np
import pickle
from trajopt.envs.herb_pushing_env import HerbEnv
import cv2
from pose_model_estimator import pose_model_estimator
import matplotlib.pyplot as plt


# top_dir='/home/willie/workspace/SSC'
# # obs_file_names=['herb_pushing_easy_40_50_300_9_0_vel_norm_mppi.pickle', 'herb_pushing_easy_40_50_300_8_0_vel_norm_mppi.pickle', 'herb_pushing_easy_40_50_300_7_0_vel_norm_mppi.pickle', 'herb_pushing_easy_40_50_300_6_0_vel_norm_mppi.pickle', 'herb_pushing_easy_40_50_300_0_0_vel_norm_mppi.pickle']
# # gt_file_names=['herb_pushing_easy_40_50_300_5_1_vel_norm_mppi.pickle', 'herb_pushing_easy_40_50_300_3_1_vel_norm_mppi.pickle', 'herb_pushing_easy_40_50_300_4_1_vel_norm_mppi.pickle', 'herb_pushing_easy_40_50_300_2_1_vel_norm_mppi.pickle', 'herb_pushing_easy_40_50_300_1_1_vel_norm_mppi.pickle']
# 
# obs_file_names=['herb_pushing_easy_40_50_300_14_0_cylinder_mppi.pickle', 'herb_pushing_easy_40_50_300_11_0_cylinder_mppi.pickle']
# gt_file_names=['herb_pushing_easy_40_50_300_10_1_cylinder_mppi.pickle']
# 
# 
# obs_mppis=[]
# gt_mppis=[]
# 
# for obs_file_name in obs_file_names:
#     obs_mppis.append(pickle.load(open(obs_file_name, 'rb')))
#     
# for gt_file_name in gt_file_names:
#     gt_mppis.append(pickle.load(open(gt_file_name, 'rb')))
#     
# mean_obs_final_reward=0
# for obs_env in obs_mppis:
#     obs_env.env.set_env_state(obs_env.sol_state[-1])
#     mean_obs_final_reward+=obs_env.env.get_dist()
# mean_obs_final_reward=mean_obs_final_reward/len(obs_mppis)
# 
# print(mean_obs_final_reward)
# 
# mean_gt_final_reward=0
# for gt_env in gt_mppis:
#     gt_env.env.set_env_state(gt_env.sol_state[-1])
#     mean_gt_final_reward+=gt_env.env.get_dist()
# mean_gt_final_reward=mean_gt_final_reward/len(gt_mppis)
# 
# print(mean_gt_final_reward)
# 
# obs_rewards=np.zeros((len(obs_mppis[0].sol_state), 3))
# for step in range(len(obs_mppis[0].sol_state)):
#     step_rewards=np.zeros(len(obs_mppis))
#     for mppi_ind in range(len(obs_mppis)):
#         obs_mppis[mppi_ind].env.set_env_state(obs_mppis[mppi_ind].sol_state[step])
#         step_rewards[mppi_ind]=obs_mppis[mppi_ind].env.get_dist()
#     obs_rewards[step, 0]=np.amax(step_rewards)
#     obs_rewards[step, 1]=np.mean(step_rewards)
#     obs_rewards[step, 2]=np.amin(step_rewards)
# 
# obs_rewards=100.0*obs_rewards
#     
# gt_rewards=np.zeros((len(obs_mppis[0].sol_state), 3))
# for step in range(len(obs_mppis[0].sol_state)):
#     step_rewards=np.zeros(len(gt_mppis))
#     for mppi_ind in range(len(gt_mppis)):
#         gt_mppis[mppi_ind].env.set_env_state(gt_mppis[mppi_ind].sol_state[step])
#         step_rewards[mppi_ind]=gt_mppis[mppi_ind].env.get_dist()
#     gt_rewards[step, 0]=np.amax(step_rewards)
#     gt_rewards[step, 1]=np.mean(step_rewards)
#     gt_rewards[step, 2]=np.amin(step_rewards)
# 
# gt_rewards=100.0*gt_rewards
#     
# plt.ylabel('Error (in cm)')
# plt.xlabel('Timestep')
# 
# plt.fill_between(np.array(range(gt_rewards.shape[0])), gt_rewards[:, 0] , y2=gt_rewards[:, 2], color='skyblue', alpha='0.25')
# plt.plot(np.array(range(gt_rewards.shape[0])), gt_rewards[:, 1], color='blue')
# plt.fill_between(np.array(range(obs_rewards.shape[0])), obs_rewards[:, 0] , y2=obs_rewards[:, 2], color='red', alpha='0.25')
# plt.plot(np.array(range(obs_rewards.shape[0])), obs_rewards[:, 1], color='darkred')
# plt.title('Rearrangement Loss')
# plt.show()   
    
center_errors=np.array([0.022539450212023995, 0.021167896385517953, 0.02185574587181324, 0.02200618670898857, 0.021389338688318958, 0.021771532116687677, 0.021913590488613653, 0.02180480951224647, 0.021854952336573003, 0.021501863160997423, 0.021514554972990298, 0.02154649402680948, 0.021577737493093257, 0.021509206391392678, 0.0216772454926411, 0.021587657412197116, 0.0215394984423298, 0.021630328438015264, 0.021620247475828677, 0.021783401790290497, 0.021429289563577807, 0.02149555689650888, 0.021577089667690917, 0.021532179477137196, 0.02147348659414591, 0.021564972136611425, 0.02166056252268087, 0.0035313378481050877, 0.0021982382802702475, 0.022186076933209137, 0.013497110848007433, 0.0018320090059226377, 0.001908946574817185, 0.001136779929889299, 0.0014948251239049826, 0.0014467344528011899, 0.006296915454440367, 0.004368763698200686, 0.005858921149061567, 0.002253246993632405, 0.004841984510559643, 0.001919325929461893, 0.0019584506877049638, 0.004400760806296734, 0.004224912690677278, 0.24324696476942828, 0.23982328554040497, 0.22624985982113782, 0.273517710553679, 0.006505589318411734, 0.006780308736266862, 0.006809621940127161, 0.0058672579322865525, 0.005114532952352341, 0.004825269820050338, 0.0043826021102401904, 0.003850723498893582, 0.003603742506711905, 0.004120372307287544, 0.004403615952341367, 0.0038045852763234703, 0.004261883746588232, 0.0037469683361787184, 0.0033856030376861906, 0.003396618987628525, 0.003340358729633308, 0.002912273339283138, 0.0032133205848631596, 0.0031541259489111903, 0.003370347527539382, 0.0036714769527364014, 0.002745876635538521, 0.0031426415393945215, 0.003598442008112676, 0.0032676175184201133, 0.002841017811951523, 0.002354126095918759, 0.0025886505629125656, 0.003747168167265232, 0.0034511201533784365, 0.002469166676668735, 0.0018367951730386186, 0.0016904051774120432, 0.0014257017940670943, 0.0027758505273619625, 0.0011570110534101475, 0.0020481388201769707, 0.0015662640661085001, 0.0022933282727403293, 0.0017390791650300878, 0.0046952679563282765, 0.00531175722199393, 0.002565941671993388, 0.00561859087250565, 0.008709996276371701, 0.003360260953906907, 0.0035311698816866887, 0.0028315686835092913, 0.005563463037229952, 0.0033492635112473633, 0.0020572535422660894, 0.002238007477688316, 0.0021163071148491103, 0.0037539506870745308, 0.0032374934844188992, 0.002834844729723678, 0.00318303066968696, 0.0049231093941370496, 0.00348011377958502, 0.0038853907926001117, 0.0038861901130247457, 0.004621797563573853, 0.0051141868590248146, 0.003533783168409739, 0.004190977523238824, 0.004924481871935266, 0.004813179849039233, 0.004774499509661109, 0.003994940777388111, 0.003029013990373624, 0.004696725201208501, 0.0037365823745013262, 0.004152672229996283, 0.004844262895608788, 0.002702176268948095, 0.0031109202129164714, 0.0035239927576670616, 0.004054175578781374, 0.0033928912000507905, 0.003751193149303414, 0.002525506702119758, 0.0027773850201311366, 0.003827493023039338, 0.0033401325987389725, 0.0029389899348093705, 0.0029298822571982787, 0.0033939207675100763, 0.002903363996997049, 0.0030846211477286367, 0.002612228235264366, 0.0030649029823316036, 0.0032456108281689157, 0.0026717281149914417, 0.0032402786455997348, 0.0017030510869198144, 0.0023587221772707044, 0.0016559446752536446, 0.002817338238525974, 0.002915962055292342, 0.001991294722678794, 0.002405848432571587, 0.003444552428324105, 0.0030289960559930075, 0.0034771410804300684, 0.0034589691327500814, 0.0024416649962381923, 0.003034422667473395, 0.0029773424250941452, 0.0030432994609915095, 0.0026072247215199367, 0.002713850235004611, 0.0028318218901494476, 0.0029154168403219844, 0.0028987739840347234, 0.003025389403855466, 0.0025478965956002983, 0.0029389172494557925, 0.003133124087823285, 0.0027468480065384964, 0.0026254176683292796, 0.002886902715075913, 0.00247627545406678, 0.002578680509453333, 0.002096367792054707, 0.0026032569482896655, 0.002396246734137769, 0.0023727808348751596, 0.002222367076781603, 0.0028244086758850984, 0.0023818103878155863, 0.002695235355408483, 0.0024370016682314297, 0.002099837564084111, 0.0020642806191289074, 0.002606900144221498, 0.002522120684435568, 0.0027181223251634113, 0.002323108807216274, 0.002172449303795586, 0.0022265615535711127, 0.0023518755756961177, 0.0018930910309608818, 0.0023665387791894877, 0.0024229270085736384, 0.0020649527338380824, 0.0022237895001613623, 0.002282089604392098, 0.0021948441388258497, 0.002315320889852953, 0.0030465837984944883, 0.002233505283173833, 0.00308032428104318, 0.003056387042450226, 0.0029849202329570576, 0.002874502129787793, 0.0026030130933149577, 0.002339671925374886, 0.0024249532480286134, 0.002043238796017115, 0.0023308047875202926, 0.0024987249197623396, 0.0016743489795075922, 0.0021243536558195656, 0.0023009766174085355, 0.002269533544128922, 0.0018801567136562405, 0.002538629717911574, 0.002326564114964562, 0.002320475619250647, 0.0029695345165395865, 0.002948600658871134, 0.002527695630992549, 0.00250647549475724, 0.0023797827184721732, 0.0022030693534711553, 0.002059452724085875, 0.0019537505403028985, 0.0023059745869782006, 0.002156173095973326, 0.002227009756128237, 0.0025894324347986494, 0.002871274406659226, 0.002814327009714198, 0.0019236615387974978, 0.003374851245775991, 0.002637076864486394, 0.0027163736929397483, 0.0028479944905289113, 0.0017619687002716894, 0.0032296222757346184, 0.002354386747923394, 0.0028530386193085008, 0.0027217939990041243, 0.003257699274855417, 0.0025480001661031936, 0.0030255496083329515, 0.003342518770477889, 0.0024037643281992344, 0.002366991345891698, 0.0020969408628643085, 0.003609023819095543, 0.002837825175852008, 0.0015460339574961846, 0.0017154642001976994, 0.0025433042305112136, 0.0020823894451396257, 0.0023872290323631766, 0.0018757270328314721, 0.002845814464790395, 0.0031648554626219944, 0.0031106975968443764, 0.0033147521039601784, 0.003000523392005114, 0.0028495503448128733, 0.003177774374815737, 0.0025197898258254455, 0.002508258775748006, 0.003214228072964393, 0.0020257779895347413, 0.0028235057092093133, 0.00282138116139873, 0.002273324308929301, 0.0021526740751150316, 0.0025519065926380862, 0.003175576302637446, 0.002306814341858147, 0.0018198571047919987, 0.0028353922171467563, 0.003233010044577728, 0.0023638513199371633, 0.0031093224357950935, 0.0019620974630545694, 0.0016107792600360835, 0.0025061731836452097, 0.0033775121206180516, 0.0030032398727340925, 0.0033234116958519486, 0.0028546175500716894, 0.0027561599799038913, 0.0012590471710055883, 0.0026661576577876457, 0.0032956194662092275, 0.0032480135359693584, 0.003200970426642616, 0.0024308914169868605, 0.002807157133787765, 0.002798521379664073, 0.003036936764421387, 0.0025396255662988097, 0.002587012363443466]) 
plt.ylabel('Center Error (in cm)')
plt.xlabel('Timestep')
plt.plot(np.array(range(center_errors.shape[0])), 100*center_errors, color='blue')

plt.title('Center Error Loss')
plt.show()   


